{
  "tool_category": "calendar",
  "description": "Calendar integration tools for event management, availability checking, and meeting coordination across Google Calendar, Outlook, and other providers via the adapter service",
  "adapter_base_url": "{{ADAPTER_SERVICE_URL}}",
  "version": "1.0.0",
  "tools": [
    {
      "tool_id": "calendar_check_availability",
      "name": "Check Calendar Availability",
      "description": "Find available time slots by checking calendars of specified attendees. Returns slots that work for all participants within working hours.",
      "http_config": {
        "method": "POST",
        "endpoint": "/api/v1/calendar/availability",
        "headers": {
          "Content-Type": "application/json",
          "X-Tenant-ID": "{{TENANT_ID}}",
          "Authorization": "Bearer {{API_KEY}}"
        },
        "timeout_seconds": 30
      },
      "input_schema": {
        "type": "object",
        "properties": {
          "correlation_id": {
            "type": "string",
            "description": "Correlation ID for request tracing"
          },
          "query": {
            "type": "object",
            "required": ["attendees", "duration_minutes", "date_range"],
            "properties": {
              "attendees": {
                "type": "array",
                "items": {"type": "string", "format": "email"},
                "description": "Email addresses to check availability for"
              },
              "duration_minutes": {
                "type": "integer",
                "minimum": 1,
                "description": "Required meeting duration in minutes"
              },
              "date_range": {
                "type": "object",
                "required": ["start", "end"],
                "properties": {
                  "start": {"type": "string", "description": "Start date (YYYY-MM-DD)"},
                  "end": {"type": "string", "description": "End date (YYYY-MM-DD)"}
                }
              },
              "working_hours": {
                "type": "object",
                "properties": {
                  "start": {"type": "string", "description": "Start time (HH:MM)"},
                  "end": {"type": "string", "description": "End time (HH:MM)"},
                  "timezone": {"type": "string", "description": "Timezone (e.g., 'America/New_York')"},
                  "exclude_weekends": {"type": "boolean", "default": true}
                }
              },
              "buffer_minutes": {
                "type": "integer",
                "minimum": 0,
                "default": 0,
                "description": "Buffer time before/after existing events"
              }
            }
          }
        },
        "required": ["query"]
      },
      "output_schema": {
        "type": "object",
        "properties": {
          "available_slots": {
            "type": "array",
            "description": "List of available time slots",
            "items": {
              "type": "object",
              "properties": {
                "start": {"type": "string", "format": "date-time"},
                "end": {"type": "string", "format": "date-time"},
                "all_available": {"type": "boolean"},
                "available_attendees": {"type": "array", "items": {"type": "string"}}
              }
            }
          },
          "checked_calendars": {"type": "integer"},
          "timezone": {"type": "string"}
        }
      },
      "error_handling": {
        "retry_on": [500, 502, 503, 504],
        "max_retries": 3,
        "backoff_multiplier": 2
      }
    },
    {
      "tool_id": "calendar_create_event",
      "name": "Create Calendar Event",
      "description": "Create a new calendar event with attendees, location (video/physical), and reminders. Sends invitations to attendees.",
      "http_config": {
        "method": "POST",
        "endpoint": "/api/v1/calendar/events",
        "headers": {
          "Content-Type": "application/json",
          "X-Tenant-ID": "{{TENANT_ID}}",
          "Authorization": "Bearer {{API_KEY}}"
        },
        "timeout_seconds": 30
      },
      "input_schema": {
        "type": "object",
        "properties": {
          "idempotency_key": {
            "type": "string",
            "description": "Unique key for idempotent operation"
          },
          "correlation_id": {
            "type": "string",
            "description": "Correlation ID for request tracing"
          },
          "event": {
            "type": "object",
            "required": ["title", "start_time", "end_time"],
            "properties": {
              "title": {"type": "string", "description": "Event title"},
              "description": {"type": "string", "description": "Event description"},
              "start_time": {"type": "string", "format": "date-time", "description": "Start time (ISO 8601)"},
              "end_time": {"type": "string", "format": "date-time", "description": "End time (ISO 8601)"},
              "timezone": {"type": "string", "default": "UTC", "description": "Event timezone"},
              "all_day": {"type": "boolean", "default": false},
              "attendees": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": ["email"],
                  "properties": {
                    "email": {"type": "string", "format": "email"},
                    "name": {"type": "string"},
                    "required": {"type": "boolean", "default": true}
                  }
                }
              },
              "location": {
                "type": "object",
                "properties": {
                  "type": {"type": "string", "description": "Location type (video, physical, phone)"},
                  "url": {"type": "string", "description": "Video meeting URL"},
                  "display_name": {"type": "string"},
                  "address": {"type": "string"}
                }
              },
              "reminders": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "method": {"type": "string", "description": "Reminder method (email, notification)"},
                    "minutes_before": {"type": "integer", "description": "Minutes before event"}
                  }
                }
              },
              "calendar_id": {"type": "string", "description": "Target calendar ID"}
            }
          },
          "options": {
            "type": "object",
            "properties": {
              "send_notifications": {"type": "boolean", "default": true},
              "check_availability": {"type": "boolean", "default": false}
            }
          }
        },
        "required": ["event"]
      },
      "output_schema": {
        "type": "object",
        "properties": {
          "event_id": {"type": "string"},
          "event": {"type": "object"},
          "url": {"type": "string"},
          "meeting_url": {"type": "string"}
        }
      },
      "error_handling": {
        "retry_on": [500, 502, 503, 504],
        "max_retries": 3,
        "backoff_multiplier": 2
      }
    },
    {
      "tool_id": "calendar_update_event",
      "name": "Update Calendar Event",
      "description": "Update an existing calendar event. Can modify time, attendees, location, or other details. Sends update notifications.",
      "http_config": {
        "method": "PUT",
        "endpoint": "/api/v1/calendar/events/{event_id}",
        "headers": {
          "Content-Type": "application/json",
          "X-Tenant-ID": "{{TENANT_ID}}",
          "Authorization": "Bearer {{API_KEY}}"
        },
        "timeout_seconds": 30
      },
      "input_schema": {
        "type": "object",
        "properties": {
          "event_id": {
            "type": "string",
            "description": "Event ID to update"
          },
          "idempotency_key": {
            "type": "string",
            "description": "Unique key for idempotent operation"
          },
          "correlation_id": {
            "type": "string",
            "description": "Correlation ID for request tracing"
          },
          "updates": {
            "type": "object",
            "description": "Fields to update",
            "properties": {
              "title": {"type": "string"},
              "description": {"type": "string"},
              "start_time": {"type": "string", "format": "date-time"},
              "end_time": {"type": "string", "format": "date-time"},
              "attendees": {"type": "array"},
              "location": {"type": "object"}
            }
          },
          "send_notifications": {
            "type": "boolean",
            "default": true,
            "description": "Notify attendees of changes"
          }
        },
        "required": ["event_id", "updates"]
      },
      "output_schema": {
        "type": "object",
        "properties": {
          "event": {"type": "object"},
          "updated_fields": {"type": "array"}
        }
      },
      "error_handling": {
        "retry_on": [500, 502, 503, 504],
        "max_retries": 3,
        "backoff_multiplier": 2
      }
    },
    {
      "tool_id": "calendar_list_events",
      "name": "List Calendar Events",
      "description": "List calendar events within a date range for specified calendars.",
      "http_config": {
        "method": "POST",
        "endpoint": "/api/v1/calendar/events/list",
        "headers": {
          "Content-Type": "application/json",
          "X-Tenant-ID": "{{TENANT_ID}}",
          "Authorization": "Bearer {{API_KEY}}"
        },
        "timeout_seconds": 30
      },
      "input_schema": {
        "type": "object",
        "properties": {
          "calendar_id": {
            "type": "string",
            "description": "Calendar ID to list events from"
          },
          "start_date": {
            "type": "string",
            "description": "Start date (YYYY-MM-DD)"
          },
          "end_date": {
            "type": "string",
            "description": "End date (YYYY-MM-DD)"
          },
          "pagination": {
            "type": "object",
            "properties": {
              "page": {"type": "integer", "default": 1},
              "page_size": {"type": "integer", "default": 50}
            }
          }
        }
      },
      "output_schema": {
        "type": "object",
        "properties": {
          "events": {"type": "array", "description": "List of calendar events"},
          "pagination": {"type": "object", "description": "Pagination metadata"}
        }
      },
      "error_handling": {
        "retry_on": [500, 502, 503, 504],
        "max_retries": 3,
        "backoff_multiplier": 2
      }
    }
  ],
  "configuration": {
    "provider_mapping": {
      "google": {
        "enabled": true,
        "credentials_key": "GOOGLE_CALENDAR_CREDENTIALS"
      },
      "outlook": {
        "enabled": true,
        "credentials_key": "MICROSOFT_GRAPH_CREDENTIALS"
      }
    },
    "rate_limits": {
      "requests_per_minute": 20,
      "concurrent_requests": 5
    },
    "defaults": {
      "working_hours": {
        "start": "09:00",
        "end": "17:00",
        "timezone": "America/New_York",
        "exclude_weekends": true
      },
      "meeting_buffer_minutes": 30,
      "default_duration_minutes": 60,
      "default_reminders": [
        {"method": "email", "minutes_before": 1440},
        {"method": "notification", "minutes_before": 10}
      ]
    }
  },
  "metadata": {
    "created_at": "2025-10-31T00:00:00Z",
    "updated_at": "2025-10-31T00:00:00Z",
    "version": "1.0.0"
  }
}