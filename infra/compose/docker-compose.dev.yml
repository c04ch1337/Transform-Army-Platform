version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: transform-army-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-transform_army}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - transform-army-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: transform-army-redis
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-}
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - transform-army-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Adapter Service (FastAPI)
  adapter:
    build:
      context: ../../apps/adapter
      dockerfile: Dockerfile
    container_name: transform-army-adapter
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/transform_army
      - REDIS_URL=redis://redis:6379/0
      - ADAPTER_HOST=0.0.0.0
      - ADAPTER_PORT=8000
    ports:
      - "8000:8000"
    volumes:
      - ../../apps/adapter:/app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - transform-army-network
    command: uvicorn src.main:app --host 0.0.0.0 --port 8000 --reload

  # Web Application (Next.js)
  web:
    build:
      context: ../../apps/web
      dockerfile: Dockerfile.dev
    container_name: transform-army-web
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - NEXT_PUBLIC_APP_URL=http://localhost:3000
    ports:
      - "3000:3000"
    volumes:
      - ../../apps/web:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - adapter
    networks:
      - transform-army-network
    command: pnpm dev

  # pgAdmin (Database Management UI)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: transform-army-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@transform-army.ai
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - transform-army-network
    profiles:
      - tools

  # Redis Commander (Redis Management UI)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: transform-army-redis-commander
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - transform-army-network
    profiles:
      - tools

networks:
  transform-army-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local